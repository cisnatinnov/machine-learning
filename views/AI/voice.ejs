<!-- Main content -->
<section class="content" id="lists">
	<!-- Small boxes (Stat box) -->
	<div class="row">
    <div class="col-lg-6">
      <div class="box">
        <div class="box-header">
          <h4 class="box-title"><%= title %></h4>
        </div>
        <div class="box-body">
          <button id="start-btn" class="btn btn-primary">Start</button>
          <button id="stop-btn" class="btn btn-danger">Stop</button>
        </div>
      </div>
    </div>
    <div class="col-lg-6">
      <div class="box">
        <div class="box-header">
          <h4 class="box-title">Respond / Reply</h4>
        </div>
        <div class="box-body">
          <div id="output"></div>
          <div id="replay"></div>
        </div>
      </div>
    </div>
  </div>
</section>
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io()
  const SpeechRecognition =
    window.SpeechRecognition || window.webkitSpeechRecognition;
  const recognition = new SpeechRecognition();

  const output = document.querySelector("#output");
  const startBtn = document.querySelector("#start-btn");
  const stopBtn = document.querySelector("#stop-btn");
  const reply = document.querySelector("#replay");

  recognition.continuous = true;

  startBtn.addEventListener("click", () => {
    recognition.start();
  });

  stopBtn.addEventListener("click", () => {
    recognition.stop();
  });

  recognition.addEventListener("result", (event) => {
    const transcript = Array.from(event.results)
      .map((result) => result[0].transcript)
      .join("");

    output.textContent = transcript;
    socket.emit("sendMessage", transcript, (error) => {
      if (error) {
        reply.textContent = error
      }
      socket.on("message", (msg) => {
        reply.textContent = msg
      })
      console.log('Message delivered!')
    })
  });
</script>