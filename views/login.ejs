<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%=title%></title>
    <link rel="stylesheet" href="/css/style.css">
  </head>
  <body>
    <div class="login_box" id="login">
      <p class="login_first">Silahkan login</p>
      <p v-if="isValid" style="color: green;">{{ message }}</p>
      <p v-if="!isValid" style="color: red;">{{ message }}</p>
      <label>Email</label>
      <input type="email" class="login_form" v-model="email">
      <label>Password</label>
      <input type="password" class="login_form" v-model="password"><br>
      <input type="submit" class="login_button" value="LOGIN" @click="login">
    </div>  
  </body>
  <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  <script src="/js/lodash.js"></script>
  <script src="/js/vue.js"></script>
  <script>
    var login = new Vue({
      el: '#login',
      data: {
        email: '',
        result: '',
        message: '',
        isValid: false
      },
      watch: {
        email:{
          immediate: true,
          deep: true,
          handler(nv) {
            let vm = this;
            if (!_.isEmpty(nv)) {
              vm.message = 'Email valid';
              vm.isValid = true;
              if (!vm.emailValidate(nv)) {
                vm.message = 'Email invalid';
                vm.isValid = false;
              }
            }
          }
        },
        password:{
          immediate: true,
          deep: true,
          handler(nv) {
            let vm = this;
            if (!_.isEmpty(nv)) {
              vm.message = 'Password valid';
              vm.isValid = true;
              if (!vm.passwordValidate(nv)) {
                vm.message = 'Password invalid';
                vm.isValid = false;
              }
            }
          }
        }
      },
      methods: {
        emailValidate(email) {
          var re = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
          return re.test(email);
        },
        passwordValidate(password) {
          var re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/
          return res.test(password);
        },
        login() {
          let vm = this, data = {
            email: vm.email,
            password: vm.password
          }
          if (!vm.emailValidate(vm.email)) {
            vm.message = 'Email invalid';
            vm.isValid = false;
            return false;
          }
          if (!vm.passwordValidate(vm.password)) {
            vm.message = 'Password invalid';
            vm.isValid = false;
            return false;
          }
          axios.post('/auth/checkPassword', data).then((res) => {
            vm.result = res.data.result;
            if (vm.result=='error') vm.message = res.data.message;
            else {
              vm.message = res.data.message;
              location.replace('/');
            }
          })
          .catch((error) => {
            // handle error
            console.log(error);
          })
        }
      },
    })
  </script>
</html>